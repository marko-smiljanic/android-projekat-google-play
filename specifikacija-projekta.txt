Opsta specifikacija za projekat iz RMS

Imacu klasu korisnik koja ce mi vise predstavljati sam uredjaj nego korisnika. Korisnik ce imati korisnicko ime, lozinku i email. 
Korisnike mogu da cuvam na api-ju. Ovo cuvam cisto zbog neke simulacije placanja, ni za sta drugo mi nije potrebno. 
Dakle na pocetku korisniku nudimo da se uloguje sa postojecim nalogom ili da napravi novi.

Simulaciju placanja bih resio sa nekim globalin atributom, platio ful verziju aplikacije == true. 
Ako nije platio verziju aplikacije, uklanjamo mu opcije za dodavanje sata.

Za navigaciju izmedju fragmenata korisnim fragment manager i postavljam uslove u shared preferences koji su npr. response od apija (npr.
ulogovan = jeste/nije, ulogovaniKorisnik = korisnickoIme/"", itd.)

Simulacija placanja bi bila neka funkcija u korisniku koja bi popunila atribut platio ful verziju. To bi se prikazalo ispod liste 
satova gde bi stajalo uporozerenje nemate ful verziju aplikacije i dugme kupite ful verziju. Kada se klikne na dugme samo bih obavestio 
da je kupljena ful verzija i to je to, jer je samo poenta da simuliram tako nesto.

U lok. bazi cuvam same objekte satova a checkpointe takodje u bazu ali posebno, spajacu ih preko id-ja sata.

Sat ima marku, model i listu checkpointa (sat i checkpoint se spajaju preko id-ja sata kao atribut u checkpointu)

Checkpoint isto moze da bude objekat koji mora da ima dva check-a gde su jedan pocetni i drugi gde se izbaci gotovo vreme.

Onda bih checkpointe cuvao u bazi gde bih imao id sata, pocetno vreme, i onda bih samo menjao dalje polja u bazi kada se doda drugi checkpoint,
dakle neka polja bi pocetno bila setovana na null pa posle update-ovana. 

Pocetni checkpint treba da sadrzi vreme kada je cekiran, vreme koje je bilo na satu, a drugi checkpoint, opis i koliko iznose odstupanja 
izmedju ta dva checkpointa:

formula bi bila otprilike:

*1. sistemsko vreme - 1. vreme na satu (to je prvo izmereno odstupanje tj.vreme na satu se odnosi mna neki "sigurno tacni" npr. sistemski sat)
*2. sistemsko vreme - 2. vreme na satu (to je drugo izmereno odstupanje)
ova dva izmerena odstupanja oduzmemo jedan od drugog i dobijemo koliko je ukupno odstupanje za vreme koje je bilo izmedju checkpointa.

1. sistemsko vreme - 2. sistemsko vreme(od toga dobijamo ukupno vreme koje je bilo izmedju checkpointa) --> u razvoju nisam koristio ovo. Ovo bi
se koristilo za prikaz vremena koje je proslo izmedju checkpointa.
treba obavestiti da se tacan rezultat dobije samo ako je proslo manje od 6 sati izmedju dva check-a (priakzati neko obavestenje da je min 6 sati 
potrebno da bi se izmerilo odstupanje)

znaci svaki check objekat bi morao da ima 1. vreme check, 2. vreme check, 1. vreme na satu, 2. vreme na satu, opis i konacno odstupanje
Objekti se prave zasebno. Jedan checkpoint objekat predstavlja jedno izmereno ukupno odstupanje
Znaci kako odradi ceo checkpoint objekat onda mu nudim dugme + da doda drugi checkpoint ako zeli.
U about dodati objasnjenje da sat treba proveriti u vise stanja da bi se dobio realan rezultat. Da je sat u razlicitim polozajima, 
da se nosi, da je skroz navijen i da nije skroz navijen

MOZDA????: omoguciti koriscenja senzora kamere da moze da se uslika sat kada se dodaje novi

